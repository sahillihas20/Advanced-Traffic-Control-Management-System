// Wire Slave Sender

//===========================================================================================================================================================================================

#include <Wire.h>               // Connect multiple devices 

int table[] = {0, 0, 0, 0, 0};  // Table to store sensor values

int Sensor1 = A0;               // Sensor Pin Declaration
int Sensor2 = A1;
int Sensor3 = A2;
int Sensor4 = A3;

int next_counter1 = 0;          // Refresh Sensor Values
int next_counter2 = 0;
int next_counter3 = 0;
int next_counter4 = 0;

int buffer1 = 0;                // Store Extra Time After Lane Allocation
int buffer2 = 0;
int buffer3 = 0;
int buffer4 = 0;

int previous_counter1 = 0;      // These are for getting new values everytime for the counters/number of vehicles
int previous_counter2 = 0;
int previous_counter3 = 0;
int previous_counter4 = 0;

volatile int vehicle_time1  = 0; // Allotted vehicle time for each lane
volatile int vehicle_time2  = 0;
volatile int vehicle_time3  = 0;
volatile int vehicle_time4  = 0;

const int numReadings1 = 10;    // Store Sensor 10 values in array and calculate average
const int numReadings2 = 10;
const int numReadings3 = 10;
const int numReadings4 = 10;

int previous_value1 = 510;      // Compare Sensor values
int previous_value2 = 510;
int previous_value3 = 510;
int previous_value4 = 510;

int counter1 = 0;               // Actual values of counter to be returned in other functions
int counter2 = 0;
int counter3 = 0;
int counter4 = 0;

int readings1[numReadings1];    // Index to store sensor values
int readings2[numReadings2];
int readings3[numReadings3];
int readings4[numReadings4];

int readIndex1 = 0;             // Index of arrays for calculating the average of sensor values
int readIndex2 = 0;
int readIndex3 = 0;
int readIndex4 = 0;


int total1 = 0;                 // Total of 10 sensor values
int total2 = 0;
int total3 = 0;
int total4 = 0;


int average1 = 0;               // The average
int average2 = 0;
int average3 = 0;
int average4 = 0;

int flag1 = 0;                  // To reset loop conditions
int flag2 = 0;
int flag3 = 0;
int flag4 = 0;

int c1 = 0;                     // Store counter value in alloTime
int c2 = 0;
int c3 = 0;
int c4 = 0;

static int S1;                  // Lane comparision, to sensor values
static int S2;
static int S3;
static int S4;

//===========================================================================================================================================================================================

void setup()                    // Initializes and starts arduino
{
  Serial.begin(9600);           // Arduino starts processing

  pinMode(Sensor1, INPUT);      // Sensor input pins
  pinMode(Sensor2, INPUT);
  pinMode(Sensor3, INPUT);
  pinMode(Sensor4, INPUT);

  Wire.begin(2);                // Join i2c bus with address #2
  Wire.onRequest(requestEvent); // Register event
}

//============================================================================================================================================================================================

// Function that executes whenever data is requested by master
// This function is registered as an event, see setup()
void requestEvent()
{
  for (int i = 0; i < 5; i++)
  {
    uint8_t Buffer[5];         // Store Sensor values and pass values to master code
    Buffer[0] = table[0];
    Buffer[1] = table[1];
    Buffer[2] = table[2];
    Buffer[3] = table[3];
    Buffer[4] = table[4];      // For Exit Bit

    Wire.write(Buffer, 5);     // Writes above stored values
  }
}

//===========================================================================================================================================================================================

void loop()                   // To continuosly call Sensor values and functions
{
  sensor11();                 // Call Sensor Functions
  sensor22();
  sensor33();
  sensor44();

  table[0] = S1;             // To store sensor values
  table[1] = S2;
  table[2] = S3;
  table[3] = S4;

  Serial.print(table[0]);    // Print the above sensor values
  Serial.print('\t');
  Serial.print(table[1]);
  Serial.print('\t');
  Serial.print(table[2]);
  Serial.print('\t');
  Serial.print(table[3]);
  Serial.print('\t');

  delay(100);

}

//===========================================================================================================================================================================================


// Sensor Function returns the values detected by individual sensors and calculates the average, total, Counter values and gives the output based on different functions.


int sensor11()             // Sensor Function
{
  Serial.println("Sensor1111111111111111111111111111");

  // Subtract the last reading:
  total1 = total1 - readings1[readIndex1];
  // Read from the sensor:
  readings1[readIndex1] = analogRead(A0);
  // Add the reading to the total:
  total1 = total1 + readings1[readIndex1];
  // Advance to the next position in the array:
  Serial.print("Total1 = ");
  Serial.println(total1);
  readIndex1 = readIndex1 + 1;

  // if we're at the end of the array...
  if (readIndex1 >= numReadings1)
  {
    // ...wrap around to the beginning:
    readIndex1 = 0;
  }

  // calculate the average:
  average1 = total1 / numReadings1;
  Serial.print("Average1 = ");
  Serial.println(average1);

  if (average1 > 511 && previous_value1 <= 512 && counter1 == 0)
  {
    counter1 += 1;
    Serial.println("base condition");
    previous_value1 = average1;
    Serial.println(previous_value1);
  }
  else if (average1 < 512 && previous_value1 > 511) {
    Serial.println("counter nahi badana hai");
    previous_value1 = average1;
    Serial.println(previous_value1);
  }
  else if ( average1 > 511 && previous_value1 < 512) {
    counter1 += 1;
    previous_value1 = average1;
    Serial.println("Sahi chala");
    Serial.println(previous_value1);

  }

  S1 = counter1;

  Serial.print("Counter ki value 111:");
  Serial.println(S1);
  return (S1);
}

//===========================================================================================================================================================================================

int sensor22()
{
  Serial.println("Sensor2222222222222222222222222222");
  // subtract the last reading:
  total2 = total2 - readings2[readIndex2];
  // read from the sensor:
  readings2[readIndex2] = analogRead(A2);
  // add the reading to the total:
  total2 = total2 + readings2[readIndex2];
  // advance to the next position in the array:
  Serial.print("Total2 =  ");
  Serial.println(total2);
  readIndex2 = readIndex2 + 1;

  // if we're at the end of the array...
  if (readIndex2 >= numReadings2)
  {
    // ...wrap around to the beginning:
    readIndex2 = 0;
  }

  // calculate the average:
  average2 = total2 / numReadings2;
  Serial.print("Average2 = ");
  Serial.println(average2);

  if (average2 > 511 && previous_value2 <= 512 && counter2 == 0)
  {
    counter2 += 1;
    Serial.println("base condition");
    previous_value2 = average2;
    Serial.println(previous_value2);
  }
  else if (average2 < 512 && previous_value2 > 511) {
    Serial.println("counter nahi badana hai");
    previous_value2 = average2;
    Serial.println(previous_value2);
  }
  else if ( average2 > 511 && previous_value2 < 512) {
    counter2 += 1;
    previous_value2 = average2;
    Serial.println("Sahi chala");
    Serial.println(previous_value2);
  }
  S2 = counter2;

  Serial.print("Counter ki value 222:");
  Serial.println(S2);
  return (S2);
}

//===========================================================================================================================================================================================

int sensor33()
{
  Serial.println("Sensor333333333333333333333333333333");

  // subtract the last reading:
  total3 = total3 - readings3[readIndex3];
  // read from the sensor:
  readings3[readIndex3] = analogRead(A4);
  // add the reading to the total:
  total3 = total3 + readings3[readIndex3];
  // advance to the next position in the array:
  Serial.print("Total3 = ");
  Serial.println(total3);
  readIndex3 = readIndex3 + 1;

  // if we're at the end of the array...
  if (readIndex3 >= numReadings3)
  {
    // ...wrap around to the beginning:
    readIndex3 = 0;
  }

  // calculate the average:
  average3 = total3 / numReadings3;
  Serial.print("Average3 = ");
  Serial.println(average3);

  if (average3 > 511 && previous_value3 <= 512 && counter3 == 0)
  {
    counter3 += 1;
    Serial.println("base condition");
    previous_value3 = average3;
    Serial.println(previous_value3);
  }
  else if (average3 < 512 && previous_value3 > 511) {
    Serial.println("counter nahi badana hai");
    previous_value3 = average3;
    Serial.println(previous_value3);
  }
  else if ( average3 > 511 && previous_value3 < 512) {
    counter3 += 1;
    previous_value3 = average3;
    Serial.println("Sahi chala");
    Serial.println(previous_value3);
  }
  S3 = counter3;
  Serial.print("Counter ki value 333:");
  Serial.println(S3);
  return (S3);
}

//============================================================================================================================================================================================

int sensor44()
{
  Serial.println("Sensor44444444444444444444444");
  // subtract the last reading:
  total4 = total4 - readings4[readIndex4];
  // read from the sensor:
  readings4[readIndex4] = analogRead(A6);
  // add the reading to the total:
  total4 = total4 + readings4[readIndex4];
  // advance to the next position in the array:
  Serial.print("Total4 = ");
  Serial.println(total4);
  readIndex4 = readIndex4 + 1;

  // if we're at the end of the array...
  if (readIndex4 >= numReadings4)
  {
    // ...wrap around to the beginning:
    readIndex4 = 0;
  }

  // calculate the average:
  average4 = total4 / numReadings4;
  Serial.print("Average4  = ");
  Serial.println(average4);

  if (average4 > 511 && previous_value4 <= 512 && counter4 == 0)
  {
    counter4 += 1;
    Serial.println("base condition");
    previous_value4 = average4;
    Serial.println(previous_value1);
  }
  else if (average4 < 512 && previous_value4 > 511) {
    Serial.println("counter nahi badana hai");
    previous_value4 = average4;
    Serial.println(previous_value4);
  }
  else if ( average4 > 511 && previous_value4 < 512) {
    counter4 += 1;
    previous_value4 = average4;
    Serial.println("Sahi chala");
    Serial.println(previous_value4);
  }

  int S4 = counter4;

  Serial.print("Counter ki value 444:");
  Serial.println(S4);
  return (S4); //Return Value of S4
}
//===========================================================================================================================================================================================
